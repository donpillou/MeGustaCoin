
if(tool == "vcxproj") {
  cppFlags += { -"/MDd", "/MD" }
  cFlags += { -"/MDd", "/MD" }
}
if(platform == "Linux") {
  cppFlags += "-std=gnu++0x"
}

buildDir = "Build/$(configuration)/.$(target)"
outputDir = "Build/$(configuration)"

targets = {

  MegucoClient = cppApplication + {
    dependencies += { "libzlimdbclient", "liblz4", "QTabFramework" }
    defines += { "QT_SHARED", "QT_GUI_LIB", "QT_CORE_LIB", "QT_NO_DEBUG" }
    if(configuration == "Debug") {
        defines -= "QT_NO_DEBUG"
    }
    includePaths = {
      "Src",
      "Ext/QTabFramework"
      "Ext/lz4"
      "Ext/libzlimdbclient/include"
      "Ext/libmegucoprotocol/include"
    }
    root = "Src"
    files = {
      "Src/**.cpp" = cppSource
      "Src/**.h"
      "Ext/QTabFramework/QTabFramework.cpp" = cppSource + {
        folder = "Tools"
      }
    }
    libs += { "zlimdbclient", "lz4", "QTabFramework" }
    libPaths += {
      "$(outputDir)"
    }
    
    qtRessourceFiles = "Src/Icons/**.png"
    qtRccFiles = "Src/MeGustaCoin.qrc"
    qtMocFiles = {
      "Src/Graph/GraphModel.h"
      "Src/Graph/GraphService.h"
      "Src/Widgets/MarketsWidget.h"
      "Src/Widgets/OrdersWidget.h"
      "Src/Widgets/BotSessionsWidget.h"
      "Src/Widgets/BotLogWidget.h"
      "Src/Widgets/TransactionsWidget.h"
      "Src/Widgets/LogWidget.h"
      "Src/Widgets/GraphWidget.h"
      "Src/Widgets/BotItemsWidget.h"
      "Src/Widgets/BotPropertiesWidget.h"
      "Src/Widgets/TradesWidget.h"
      "Src/Models/MarketOrderModel.h"
      "Src/Models/SessionItemModel.h"
      "Src/Models/SessionPropertyModel.h"
      "Src/Markets/DataService.h"
      "Src/MainWindow.h"
      "Src/MarketDialog.h"
      "Src/Bots/BotDialog.h"
      "Ext/QTabFramework/QTabFramework.h"
    }
    files += qtFiles
    
    if(platform == "Linux") {
      libs += { "rt", "pthread", "QtGui", "QtCore" }
      includePaths += {
        "/usr/include/qt4/QtCore",
        "/usr/include/qt4/QtGui",
        "/usr/include/qt4"
      }
      cppFlags += "-Wno-parentheses"
    }
    
    if(tool == "vcxproj") {
      dependencies += { "QtGui4", "QtCore4", "winmain", "moc", "rcc" }
      cppFlags += { "/Yu", "/Zc:wchar_t-" }
      linkFlags += { "/SUBSYSTEM:WINDOWS \"/MANIFESTDEPENDENCY:type='win32' name='Microsoft.Windows.Common-Controls' version='6.0.0.0' publicKeyToken='6595b64144ccf1df' language='*' processorArchitecture='*'\"" }
      files += {
        "Src/stdafx.cpp" = cppSource + {
          cppFlags += { "/Yc" }
        }
      }
      includePaths += {
        "Ext/libcppqt/include",
        "Ext/libcppqt/include/QtCore",
        "Ext/libcppqt/include/QtGUI",
      }
      libs += { "winmain", "QtGui4", "QtCore4", "ws2_32" }
    }
  }

  include "Ext/libzlimdbclient/libzlimdbclient.mare"
  libzlimdbclient += {
    folder = "Ext/libzlimdbclient"
  }

  liblz4 = cppStaticLibrary + {
    folder = "Ext/lz4"
    includePaths = { "Ext/lz4" }
    root = { "Ext/lz4" }
    files = {
      "Ext/lz4/lz4.c" = cSource,
      "Ext/lz4/lz4.h"
    }
  }

  if(tool == "vcxproj") {
    include "Ext/libcppqt/libcppqt.mare"
    "bootstrap moc rcc uic winmain QtCore4 QtGui4" += {
        folder = "Ext/qt"
    }
  }
  
  include "Ext/QTabFramework/QTabFramework.mare"
  QTabFramework += {
    folder = "Ext/QTabFramework"
  }
}

qtRccSource = {
  message = "$(if $(Win32),$(notdir $(file)),$(file)) (Qt rcc)"
  input = file
  name = "$(basename $(notdir $(file)))"
  output = "$(buildDir)/qrc_$(name).cpp"
  if platform == "Win32" { rcc = "Build/$(configuration)/rcc.exe" } else { rcc = "rcc" }
  command = "$(rcc) -name $(name) $(file) -o $(output)"
}

qtMocSource = {
  message = "$(if $(Win32),$(notdir $(file)),$(file)) (Qt moc)"
  input = file
  name = "$(basename $(notdir $(file)))"
  output = "$(buildDir)/moc_$(name).cpp"
  if platform == "Win32" { 
    moc = "Build/$(configuration)/moc.exe"
    mocFlags = "-D_MSC_VER=1500"
  } else {
    moc = "moc-qt4"
    mocFlags = ""
  }
  command = "$(moc) -fstdafx.h $(patsubst %,-D%,$(defines)) $(mocFlags) $(patsubst %,-I%,$(includePaths)) $(file) -o $(output)"
}

qtFiles = {
  "$(qtRccFiles)" = qtRccSource + { input += qtRessourceFiles }
  "$(foreach file,$(qtRccFiles),$(buildDir)/qrc_$(basename $(notdir $(file))).cpp)" = cppSource + {
    folder = ".Qt"
    cppFlags -= "/Yu"
  }
  if tool == "vcxproj" { "$(qtRessourceFiles)" } // list ressource files in Visual Studio

  "$(qtMocFiles)" = qtMocSource
  "$(foreach file,$(qtMocFiles),$(buildDir)/moc_$(basename $(notdir $(file))).cpp)" = cppSource + {
    folder = ".Qt"
    //cppFlags -= "/Yu"
  }
}

